local assert,ipairs,next,pairs=assert,ipairs,next,pairs;local a,b,c=string.format,string.len,string.match;local d,e=debug.getinfo,debug.getlocal;local f,g,h=table.insert,table.remove,table.unpack;local i,j,k,l,m,n,o,p,q,r;local s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O;q={'1st','2nd','3rd'}i=function(P,Q)for R,S in pairs(Q)do P[R]=S end;return P end;k=function(P)local Q={}for R,S in ipairs(P)do f(Q,S)end;return Q end;l=function(P)local Q={}return i(Q,P)end;m=function(T,U)if T<1 then return U end;return function(...)local V={...}if#V<T then return m(T-#V,I(U,V))else return U(...)end end end;n=function(U)return d(U,'u').nparams end;o=function()end;p=function(W)return q[W]or a('%sth',W)end;r=m(2,not _DEBUG and o or function(X,...)for W,Y in ipairs({...})do local Z=c(Y,'^%[(%a+)%]$')local _,a0=e(2,W)local a1=c(Y,'^%.%.%.(%a+)$')if Z then local a2=a('%s: %s arg must be a list',X,p(W))a2=b(Z)<=1 and a2 or a2 ..a(' of %ss',Z)assert(type(a0)=='table',a2)if b(Z)>1 then for a3,S in ipairs(a0)do assert(type(S)==Z,a2)end end elseif a1 and b(a1)>1 then local a2=a('%s: vararg must be all %ss',X,a1)local a3=-1;_,a0=e(2,a3)while a0 do assert(type(a0)==a1,a2)a3=a3-1;_,a0=e(2,a3)end elseif b(Y)>1 then local a2=a('%s: %s arg must be a %s',X,p(W),Y)assert(type(a0)==Y,a2)end end end)s=m(2,function(P,Q)r('add','number','number')return P+Q end)all=m(2,function(a4,a5)r('all','function','[a]')for W,S in ipairs(a5)do if not a4(S)then return false end end;return true end)t=m(2,function(a4,a5)r('any','function','[a]')for W,S in ipairs(a5)do if a4(S)then return true end end;return false end)u=function(...)r('compose','...function')return K(h(N({...})))end;v=m(2,function(P,Q)r('concat','[a]','[a]')local a6=k(P)for W,S in ipairs(Q)do f(a6,S)end;return a6 end)w=function(U)return m(n(U),U)end;x=m(2,m)z=m(2,function(P,Q)return P==Q end)A=m(2,function(a7,a8)local a9={}for aa,a0 in pairs(a8)do local ab=a7[aa]a9[aa]=type(ab)=='function'and ab(a0)or type(ab)=='table'and A(ab,a0)or a0 end;return a9 end)y=function(U)U=w(U)return m(2,function(P,Q,...)return U(Q,P,...)end)end;B=function(a5)return a5[1]end;C=function(...)return...end;D=function(P)local Q=k(P)g(Q)return Q end;E=m(2,function(ac,P)return type(P)==ac end)F=function(a5)return a5[#a5]end;G=m(2,function(U,P)local Q={}for W,S in ipairs(P)do f(Q,U(S))end;return Q end)H=m(2,function(P,Q)return P*Q end)I=m(2,function(U,V)return function(...)return U(h(v(V,{...})))end end)J=m(2,function(ad,P)r('pick','[string]','table')local Q={}for W,aa in ipairs(ad)do Q[aa]=P[aa]end;return Q end)K=function(...)local ae={...}local af=g(ae,1)return function(...)local a0=af(...)for W,U in ipairs(ae)do a0=U(a0)end;return a0 end end;L=m(2,function(aa,table)return table[aa]end)M=m(3,function(U,ag,a5)for W,a0 in ipairs(a5)do ag=U(ag,a0)end;return ag end)N=function(P)local Q={}for W=#P,1,-1 do f(Q,P[W])end;return Q end;O=function(P)local Q=k(P)g(Q,1)return Q end;local ah={add=s,any=t,compose=u,concat=v,curry=w,curryN=x,equals=z,evolve=A,flip=y,head=B,identity=C,init=D,is=E,last=F,map=G,multiply=H,partial=I,pick=J,pipe=K,prop=L,reduce=M,reverse=N,tail=O}ah.import=function(ai)ai=ai or _G;return i(ai,ah)end;return ah
