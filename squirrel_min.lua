local assert,ipairs,pairs=assert,ipairs,pairs;local a,b,c=string.format,string.len,string.match;local d,e=debug.getinfo,debug.getlocal;local f,g,h=table.insert,table.remove,table.unpack;local i,j,k,l,m,n,o,p,q,r,s,t;local u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y;p={'first','second','third'}i=function(Z,_)for a0,a1 in pairs(_)do Z[a0]=a1 end;return Z end;j=function(Z)local _={}for a2,a1 in ipairs(Z)do f(_,a1)end;return _ end;k=function(Z,_)local a3=j(Z)for a2,a1 in ipairs(_)do f(a3,a1)end;return a3 end;l=function(a4)return m(n(a4),a4)end;m=function(a5,a4)if a5<1 then return a4 end;return function(...)local a6={...}if#a6<a5 then return m(a5-#a6,R(a4,a6))else return a4(...)end end end;n=function(a4)return d(a4,'u').nparams end;o=function()end;q=function(a4,a6)return function(...)return a4(h(k(a6,{...})))end end;r=function(...)local a7={...}local a8=g(a7,1)return function(...)local a9=a8(...)for a2,a4 in ipairs(a7)do a9=a4(a9)end;return a9 end end;s=function(Z)local _={}for aa=#Z,1,-1 do f(_,Z[aa])end;return _ end;t=m(2,not _DEBUG and o or function(ab,...)for aa,ac in ipairs({...})do local ad=c(ac,'^%[(%a+)%]$')local ae=c(ac,'^%.%.%.(%a+)$')local af,a9=e(2,aa)local ag=type(a9)local ah,ai;if ad then ah=a('%s: %s arg must be list',ab,p[aa])ai=ah..a(', got %s',ag)assert(ag=='table',ai)if b(ad)>1 then ah=ah..a(' of %ss',ad)for a2,a1 in ipairs(a9)do ag=type(a1)ai=ah..a(', got %s element',ag)assert(ag==ad,ai)end end elseif ae and b(ae)>1 then ah=a('%s: vararg must be all %ss',ab,ae)local aj=-1;af,a9=e(2,aj)while a9 do ag=type(a9)ai=ah..a(', got a %s',ag)assert(ag==ae,ai)aj=aj-1;af,a9=e(2,aj)end elseif b(ac)>1 then ai=a('%s: %s arg must be %s, got %s',ab,p[aa],ac,ag)assert(ag==ac,ai)end end end)u=m(2,function(Z,_)t('add','number','number')return Z+_ end)v=m(2,function(ak,al)t('all','function','[a]')for a2,a1 in ipairs(al)do if not ak(a1)then return false end end;return true end)w=m(2,function(ak,al)t('any','function','[a]')for a2,a1 in ipairs(al)do if ak(a1)then return true end end;return false end)x=function(...)t('compose','...function')return r(h(s({...})))end;y=m(2,function(Z,_)t('concat','[a]','[a]')return k(Z,_)end)z=function(a4)t('curry','function')return l(a4)end;A=m(2,function(a5,a4)t('curryN','number','function')return m(a5,a4)end)C=m(2,function(Z,_)return Z==_ end)D=m(2,function(am,an)t('evolve','table','table')local ao={}for ap,a9 in pairs(an)do local aq=am[ap]ao[ap]=type(aq)=='function'and aq(a9)or type(aq)=='table'and D(aq,a9)or a9 end;return ao end)B=function(a4)t('flip','function')a4=l(a4)return m(2,function(Z,_,...)return a4(_,Z,...)end)end;E=m(2,function(Z,_)t('gt','number','number')return Z>_ end)F=function(al)t('head','[a]')return al[1]end;G=function(...)return...end;H=m(3,function(ak,ar,as)t('ifElse','function','function','function')return function(...)return ak(...)and ar(...)or as(...)end end)I=function(Z)t('init','[a]')local _=j(Z)g(_)return _ end;J=m(2,function(at,Z)t('is','string')return type(Z)==at end)K=function(al)t('last','[a]')return al[#al]end;L=m(2,function(Z,_)t('lt','number','number')return Z<_ end)M=m(2,function(a4,Z)t('map','function','[a]')local _={}for a2,a1 in ipairs(Z)do f(_,a4(a1))end;return _ end)N=m(2,function(Z,_)t('max','number','number')return Z>_ and Z or _ end)O=m(2,function(Z,_)t('min','number','number')return Z<_ and Z or _ end)P=m(2,function(Z,_)t('multiply','number','number')return Z*_ end)Q=function(ak)t('non','function')return function(...)return not ak(...)end end;R=m(2,function(a4,a6)t('partial','function','[a]')return q(a4,a6)end)S=m(2,function(au,Z)t('pick','[string]','table')local _={}for a2,ap in ipairs(au)do _[ap]=Z[ap]end;return _ end)T=function(...)t('pipe','...function')return r(...)end;U=m(2,function(ap,table)t('prop','string','table')return table[ap]end)V=m(3,function(a4,av,al)t('reduce','function','a','[a]')for a2,a9 in ipairs(al)do av=a4(av,a9)end;return av end)W=function(Z)t('reverse','[a]')return s(Z)end;X=function(Z)t('tail','[a]')local _=j(Z)g(_,1)return _ end;Y=m(2,function(ak,ar)t('when','function','function')return function(...)return ak(...)and ar(...)or...end end)local aw={add=u,all=v,any=w,compose=x,concat=y,curry=z,curryN=A,equals=C,evolve=D,flip=B,gt=E,head=F,identity=G,ifElse=H,init=I,is=J,last=K,lt=L,map=M,max=N,min=O,multiply=P,non=Q,partial=R,pick=S,pipe=T,prop=U,reduce=V,reverse=W,tail=X,when=Y}aw.import=function(ax)ax=ax or _G;return i(ax,aw)end;return aw
